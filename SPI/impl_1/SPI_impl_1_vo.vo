
// Verilog netlist produced by program backanno, Version Radiant Software (64-bit) 2.2.1.239.2

// backanno -o SPI_impl_1_vo.vo -sp High-Performance_1.2V -w -neg -gui SPI_impl_1.udb 
// Netlist created on Tue May  4 17:29:03 2021
// Netlist written on Tue May  4 17:29:06 2021
// Design is for device iCE40UP5K
// Design is for package SG48
// Design is for performance grade High-Performance_1.2V

`timescale 1 ns / 1 ps

module peripheral ( led_array, CIPO, led, data_ready, reset, controller_clk, 
                    COPI, CS );
  input  reset, controller_clk, COPI, CS;
  output [7:0] led_array;
  output CIPO, led, data_ready;
  wire   \image_shiftreg[2].sig_002.FeedThruLUT , 
         \image_shiftreg[1].sig_000.FeedThruLUT , \image_shiftreg[2] , 
         \image_shiftreg[1] , n2025, reset_c, clk, \image_shiftreg[0] , n2010, 
         n2327, n983, \byte_counter[0] , \bit_counter[3] , n2, 
         \byte_counter[1] , \s[0] , n2022, n2357, n2036, \s[1] , 
         \byte_counter[4] , n4, n2338, n885, n2328, n2326, n6, 
         \byte_counter[3] , \byte_counter[2] , 
         \image_shiftreg[4].sig_004.FeedThruLUT , 
         \image_shiftreg[3].sig_003.FeedThruLUT , \image_shiftreg[4] , 
         \image_shiftreg[3] , \image_shiftreg[6].sig_006.FeedThruLUT , 
         \image_shiftreg[5].sig_005.FeedThruLUT , \image_shiftreg[6] , 
         \image_shiftreg[5] , \image_shiftreg[8].sig_008.FeedThruLUT , 
         \image_shiftreg[7].sig_007.FeedThruLUT , \image_shiftreg[8] , 
         \image_shiftreg[7] , \image_shiftreg[10].sig_010.FeedThruLUT , 
         \image_shiftreg[9].sig_009.FeedThruLUT , \image_shiftreg[10] , 
         \image_shiftreg[9] , \image_shiftreg[12].sig_012.FeedThruLUT , 
         \image_shiftreg[11].sig_011.FeedThruLUT , \image_shiftreg[12] , 
         \image_shiftreg[11] , \image_shiftreg[14].sig_014.FeedThruLUT , 
         \image_shiftreg[13].sig_013.FeedThruLUT , \image_shiftreg[14] , 
         \image_shiftreg[13] , \image_shiftreg[16].sig_016.FeedThruLUT , 
         \image_shiftreg[15].sig_015.FeedThruLUT , \image_shiftreg[16] , 
         \image_shiftreg[15] , \image_shiftreg[18].sig_018.FeedThruLUT , 
         \image_shiftreg[17].sig_017.FeedThruLUT , \image_shiftreg[18] , 
         \image_shiftreg[17] , \image_shiftreg[20].sig_020.FeedThruLUT , 
         \image_shiftreg[19].sig_019.FeedThruLUT , \image_shiftreg[20] , 
         \image_shiftreg[19] , \image_shiftreg[22].sig_022.FeedThruLUT , 
         \image_shiftreg[21].sig_021.FeedThruLUT , \image_shiftreg[22] , 
         \image_shiftreg[21] , \image_shiftreg[24].sig_024.FeedThruLUT , 
         \image_shiftreg[23].sig_023.FeedThruLUT , \image_shiftreg[24] , 
         \image_shiftreg[23] , \image_shiftreg[26].sig_026.FeedThruLUT , 
         \image_shiftreg[25].sig_025.FeedThruLUT , \image_shiftreg[26] , 
         \image_shiftreg[25] , \image_shiftreg[28].sig_028.FeedThruLUT , 
         \image_shiftreg[27].sig_027.FeedThruLUT , \image_shiftreg[28] , 
         \image_shiftreg[27] , \image_shiftreg[30].sig_030.FeedThruLUT , 
         \image_shiftreg[29].sig_029.FeedThruLUT , \image_shiftreg[30] , 
         \image_shiftreg[29] , \image_shiftreg[32].sig_032.FeedThruLUT , 
         \image_shiftreg[31].sig_031.FeedThruLUT , \image_shiftreg[32] , 
         \image_shiftreg[31] , \image_shiftreg[34].sig_034.FeedThruLUT , 
         \image_shiftreg[33].sig_033.FeedThruLUT , \image_shiftreg[34] , 
         \image_shiftreg[33] , \image_shiftreg[36].sig_036.FeedThruLUT , 
         \image_shiftreg[35].sig_035.FeedThruLUT , \image_shiftreg[36] , 
         \image_shiftreg[35] , \image_shiftreg[38].sig_038.FeedThruLUT , 
         \image_shiftreg[37].sig_037.FeedThruLUT , \image_shiftreg[38] , 
         \image_shiftreg[37] , \image_shiftreg[40].sig_040.FeedThruLUT , 
         \image_shiftreg[39].sig_039.FeedThruLUT , \image_shiftreg[40] , 
         \image_shiftreg[39] , \image_shiftreg[42].sig_042.FeedThruLUT , 
         \image_shiftreg[41].sig_041.FeedThruLUT , \image_shiftreg[42] , 
         \image_shiftreg[41] , \image_shiftreg[44].sig_044.FeedThruLUT , 
         \image_shiftreg[43].sig_043.FeedThruLUT , \image_shiftreg[44] , 
         \image_shiftreg[43] , \image_shiftreg[46].sig_046.FeedThruLUT , 
         \image_shiftreg[45].sig_045.FeedThruLUT , \image_shiftreg[46] , 
         \image_shiftreg[45] , \image_shiftreg[48].sig_048.FeedThruLUT , 
         \image_shiftreg[47].sig_047.FeedThruLUT , \image_shiftreg[48] , 
         \image_shiftreg[47] , \image_shiftreg[50].sig_050.FeedThruLUT , 
         \image_shiftreg[49].sig_049.FeedThruLUT , \image_shiftreg[50] , 
         \image_shiftreg[49] , \image_shiftreg[52].sig_052.FeedThruLUT , 
         \image_shiftreg[51].sig_051.FeedThruLUT , \image_shiftreg[52] , 
         \image_shiftreg[51] , \image_shiftreg[54].sig_054.FeedThruLUT , 
         \image_shiftreg[53].sig_053.FeedThruLUT , \image_shiftreg[54] , 
         \image_shiftreg[53] , \image_shiftreg[56].sig_056.FeedThruLUT , 
         \image_shiftreg[55].sig_055.FeedThruLUT , \image_shiftreg[56] , 
         \image_shiftreg[55] , \image_shiftreg[58].sig_058.FeedThruLUT , 
         \image_shiftreg[57].sig_057.FeedThruLUT , \image_shiftreg[58] , 
         \image_shiftreg[57] , \image_shiftreg[60].sig_060.FeedThruLUT , 
         \image_shiftreg[59].sig_059.FeedThruLUT , \image_shiftreg[60] , 
         \image_shiftreg[59] , \image_shiftreg[62].sig_062.FeedThruLUT , 
         \image_shiftreg[61].sig_061.FeedThruLUT , \image_shiftreg[62] , 
         \image_shiftreg[61] , \image_shiftreg[64].sig_064.FeedThruLUT , 
         \image_shiftreg[63].sig_063.FeedThruLUT , \image_shiftreg[64] , 
         \image_shiftreg[63] , \image_shiftreg[66].sig_066.FeedThruLUT , 
         \image_shiftreg[65].sig_065.FeedThruLUT , \image_shiftreg[66] , 
         \image_shiftreg[65] , \image_shiftreg[68].sig_068.FeedThruLUT , 
         \image_shiftreg[67].sig_067.FeedThruLUT , \image_shiftreg[68] , 
         \image_shiftreg[67] , \image_shiftreg[70].sig_070.FeedThruLUT , 
         \image_shiftreg[69].sig_069.FeedThruLUT , \image_shiftreg[70] , 
         \image_shiftreg[69] , \image_shiftreg[72].sig_072.FeedThruLUT , 
         \image_shiftreg[71].sig_071.FeedThruLUT , \image_shiftreg[72] , 
         \image_shiftreg[71] , \image_shiftreg[74].sig_074.FeedThruLUT , 
         \image_shiftreg[73].sig_073.FeedThruLUT , \image_shiftreg[74] , 
         \image_shiftreg[73] , \image_shiftreg[76].sig_076.FeedThruLUT , 
         \image_shiftreg[75].sig_075.FeedThruLUT , \image_shiftreg[76] , 
         \image_shiftreg[75] , \image_shiftreg[78].sig_078.FeedThruLUT , 
         \image_shiftreg[77].sig_077.FeedThruLUT , \image_shiftreg[78] , 
         \image_shiftreg[77] , \image_shiftreg[80].sig_080.FeedThruLUT , 
         \image_shiftreg[79].sig_079.FeedThruLUT , \image_shiftreg[80] , 
         \image_shiftreg[79] , \image_shiftreg[82].sig_082.FeedThruLUT , 
         \image_shiftreg[81].sig_081.FeedThruLUT , \image_shiftreg[82] , 
         \image_shiftreg[81] , \image_shiftreg[84].sig_084.FeedThruLUT , 
         \image_shiftreg[83].sig_083.FeedThruLUT , \image_shiftreg[84] , 
         \image_shiftreg[83] , \image_shiftreg[86].sig_086.FeedThruLUT , 
         \image_shiftreg[85].sig_085.FeedThruLUT , \image_shiftreg[86] , 
         \image_shiftreg[85] , \image_shiftreg[88].sig_088.FeedThruLUT , 
         \image_shiftreg[87].sig_087.FeedThruLUT , \image_shiftreg[88] , 
         \image_shiftreg[87] , \image_shiftreg[90].sig_090.FeedThruLUT , 
         \image_shiftreg[89].sig_089.FeedThruLUT , \image_shiftreg[90] , 
         \image_shiftreg[89] , \image_shiftreg[92].sig_092.FeedThruLUT , 
         \image_shiftreg[91].sig_091.FeedThruLUT , \image_shiftreg[92] , 
         \image_shiftreg[91] , \image_shiftreg[94].sig_094.FeedThruLUT , 
         \image_shiftreg[93].sig_093.FeedThruLUT , \image_shiftreg[94] , 
         \image_shiftreg[93] , \image_shiftreg[96].sig_096.FeedThruLUT , 
         \image_shiftreg[95].sig_095.FeedThruLUT , \image_shiftreg[96] , 
         \image_shiftreg[95] , \image_shiftreg[98].sig_098.FeedThruLUT , 
         \image_shiftreg[97].sig_097.FeedThruLUT , \image_shiftreg[98] , 
         \image_shiftreg[97] , \image_shiftreg[100].sig_100.FeedThruLUT , 
         \image_shiftreg[99].sig_099.FeedThruLUT , \image_shiftreg[100] , 
         \image_shiftreg[99] , \image_shiftreg[102].sig_102.FeedThruLUT , 
         \image_shiftreg[101].sig_101.FeedThruLUT , \image_shiftreg[102] , 
         \image_shiftreg[101] , \image_shiftreg[104].sig_104.FeedThruLUT , 
         \image_shiftreg[103].sig_103.FeedThruLUT , \image_shiftreg[104] , 
         \image_shiftreg[103] , \image_shiftreg[106].sig_106.FeedThruLUT , 
         \image_shiftreg[105].sig_105.FeedThruLUT , \image_shiftreg[106] , 
         \image_shiftreg[105] , \image_shiftreg[108].sig_108.FeedThruLUT , 
         \image_shiftreg[107].sig_107.FeedThruLUT , \image_shiftreg[108] , 
         \image_shiftreg[107] , \image_shiftreg[110].sig_110.FeedThruLUT , 
         \image_shiftreg[109].sig_109.FeedThruLUT , \image_shiftreg[110] , 
         \image_shiftreg[109] , \image_shiftreg[112].sig_112.FeedThruLUT , 
         \image_shiftreg[111].sig_111.FeedThruLUT , \image_shiftreg[112] , 
         \image_shiftreg[111] , \image_shiftreg[114].sig_114.FeedThruLUT , 
         \image_shiftreg[113].sig_113.FeedThruLUT , \image_shiftreg[114] , 
         \image_shiftreg[113] , \image_shiftreg[116].sig_116.FeedThruLUT , 
         \image_shiftreg[115].sig_115.FeedThruLUT , \image_shiftreg[116] , 
         \image_shiftreg[115] , \image_shiftreg[118].sig_118.FeedThruLUT , 
         \image_shiftreg[117].sig_117.FeedThruLUT , \image_shiftreg[118] , 
         \image_shiftreg[117] , \led_array_c_120.sig_120.FeedThruLUT , 
         \image_shiftreg[119].sig_119.FeedThruLUT , led_array_c_120, 
         \image_shiftreg[119] , \led_array_c_122.sig_122.FeedThruLUT , 
         \led_array_c_121.sig_121.FeedThruLUT , led_array_c_122, 
         led_array_c_121, \led_array_c_124.sig_124.FeedThruLUT , 
         \led_array_c_123.sig_123.FeedThruLUT , led_array_c_124, 
         led_array_c_123, \led_array_c_126.sig_126.FeedThruLUT , 
         \led_array_c_125.sig_125.FeedThruLUT , led_array_c_126, 
         led_array_c_125, \COPI_c.sig_128.FeedThruLUT , 
         \led_array_c_127.sig_127.FeedThruLUT , COPI_c, led_array_c_127, n2029, 
         n2031, \bit_counter[1] , CS_c, \bit_counter[0] , \bit_counter[2] , 
         n2079, n2584, n2587, n2524, n2527, n2590, n2593, n2629, n2671, 
         n4_adj_1, n2457, n2668, \CIPO_N_286[4] , n2611, n2467, 
         \CIPO_N_286[3] , n2414, n2415, n2605, n2521, n2662, n2401, n2530, 
         n2533, n2596, n2599, n2572, n2488, n2638, n2641, n2502, n2501, n2614, 
         n2504, n2505, n2617, n2644, n2473, n2548, n2551, n2560, n2464, n2563, 
         n2476, n2566, n2569, n2674, n2428, n2545, n2557, \CIPO_N_286[5] , 
         n2554, n2407, n2578, n2419, n2422, n2656, n2659, n2626, n2507, n2508, 
         n2701, n2460, n2620, n2680, n2602, n2518, n2686, n2689, n2692, n2695, 
         n2698, n2455, n2704, n2653, n2581, n2449, n2452, n2710, n2536, n2539, 
         n2716, n2722, n2632, n2499, n2498, n2608, n2432, n2433, n2728, n2542, 
         n2734, n2737, n2650, n2324, n2120, n8, n2026, controller_clk_last, 
         controller_clk_last_last, n2005, n2033, 
         \controller_clk_last.sig_001.FeedThruLUT , clk_enable_2, n2074, n1, 
         CIPO_c, led_c, VCC_net, n2373, data_ready_c, controller_clk_c;

  SLICE_1 SLICE_1( .DI1(\image_shiftreg[2].sig_002.FeedThruLUT ), 
    .DI0(\image_shiftreg[1].sig_000.FeedThruLUT ), .C1(\image_shiftreg[2] ), 
    .A0(\image_shiftreg[1] ), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(\image_shiftreg[0] ), .Q1(\image_shiftreg[1] ), 
    .F0(\image_shiftreg[1].sig_000.FeedThruLUT ), 
    .F1(\image_shiftreg[2].sig_002.FeedThruLUT ));
  SLICE_3 SLICE_3( .DI1(n2010), .DI0(n2327), .D1(n983), .C1(\byte_counter[0] ), 
    .A1(\bit_counter[3] ), .C0(n2), .B0(\byte_counter[1] ), .A0(\s[0] ), 
    .CE(n2022), .LSR(reset_c), .CLK(clk), .Q0(\byte_counter[1] ), 
    .Q1(\byte_counter[0] ), .F0(n2327), .F1(n2010));
  SLICE_4 SLICE_4( .DI1(n2357), .DI0(n2036), .D1(\s[1] ), 
    .C1(\byte_counter[4] ), .B1(n4), .A1(reset_c), .C0(\s[0] ), .B0(n2338), 
    .A0(n885), .CLK(clk), .Q0(\s[0] ), .Q1(\s[1] ), .F0(n2036), .F1(n2357));
  SLICE_5 SLICE_5( .DI1(n2328), .DI0(n2326), .D1(\s[0] ), .C1(n6), 
    .B1(\byte_counter[3] ), .D0(\byte_counter[1] ), .C0(\s[0] ), .B0(n2), 
    .A0(\byte_counter[2] ), .CE(n2022), .LSR(reset_c), .CLK(clk), 
    .Q0(\byte_counter[2] ), .Q1(\byte_counter[3] ), .F0(n2326), .F1(n2328));
  SLICE_10 SLICE_10( .DI1(\image_shiftreg[4].sig_004.FeedThruLUT ), 
    .DI0(\image_shiftreg[3].sig_003.FeedThruLUT ), .D1(\image_shiftreg[4] ), 
    .A0(\image_shiftreg[3] ), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(\image_shiftreg[2] ), .Q1(\image_shiftreg[3] ), 
    .F0(\image_shiftreg[3].sig_003.FeedThruLUT ), 
    .F1(\image_shiftreg[4].sig_004.FeedThruLUT ));
  SLICE_12 SLICE_12( .DI1(\image_shiftreg[6].sig_006.FeedThruLUT ), 
    .DI0(\image_shiftreg[5].sig_005.FeedThruLUT ), .A1(\image_shiftreg[6] ), 
    .A0(\image_shiftreg[5] ), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(\image_shiftreg[4] ), .Q1(\image_shiftreg[5] ), 
    .F0(\image_shiftreg[5].sig_005.FeedThruLUT ), 
    .F1(\image_shiftreg[6].sig_006.FeedThruLUT ));
  SLICE_14 SLICE_14( .DI1(\image_shiftreg[8].sig_008.FeedThruLUT ), 
    .DI0(\image_shiftreg[7].sig_007.FeedThruLUT ), .D1(\image_shiftreg[8] ), 
    .C0(\image_shiftreg[7] ), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(\image_shiftreg[6] ), .Q1(\image_shiftreg[7] ), 
    .F0(\image_shiftreg[7].sig_007.FeedThruLUT ), 
    .F1(\image_shiftreg[8].sig_008.FeedThruLUT ));
  SLICE_16 SLICE_16( .DI1(\image_shiftreg[10].sig_010.FeedThruLUT ), 
    .DI0(\image_shiftreg[9].sig_009.FeedThruLUT ), .B1(\image_shiftreg[10] ), 
    .C0(\image_shiftreg[9] ), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(\image_shiftreg[8] ), .Q1(\image_shiftreg[9] ), 
    .F0(\image_shiftreg[9].sig_009.FeedThruLUT ), 
    .F1(\image_shiftreg[10].sig_010.FeedThruLUT ));
  SLICE_18 SLICE_18( .DI1(\image_shiftreg[12].sig_012.FeedThruLUT ), 
    .DI0(\image_shiftreg[11].sig_011.FeedThruLUT ), .A1(\image_shiftreg[12] ), 
    .A0(\image_shiftreg[11] ), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(\image_shiftreg[10] ), .Q1(\image_shiftreg[11] ), 
    .F0(\image_shiftreg[11].sig_011.FeedThruLUT ), 
    .F1(\image_shiftreg[12].sig_012.FeedThruLUT ));
  SLICE_20 SLICE_20( .DI1(\image_shiftreg[14].sig_014.FeedThruLUT ), 
    .DI0(\image_shiftreg[13].sig_013.FeedThruLUT ), .D1(\image_shiftreg[14] ), 
    .C0(\image_shiftreg[13] ), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(\image_shiftreg[12] ), .Q1(\image_shiftreg[13] ), 
    .F0(\image_shiftreg[13].sig_013.FeedThruLUT ), 
    .F1(\image_shiftreg[14].sig_014.FeedThruLUT ));
  SLICE_22 SLICE_22( .DI1(\image_shiftreg[16].sig_016.FeedThruLUT ), 
    .DI0(\image_shiftreg[15].sig_015.FeedThruLUT ), .C1(\image_shiftreg[16] ), 
    .C0(\image_shiftreg[15] ), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(\image_shiftreg[14] ), .Q1(\image_shiftreg[15] ), 
    .F0(\image_shiftreg[15].sig_015.FeedThruLUT ), 
    .F1(\image_shiftreg[16].sig_016.FeedThruLUT ));
  SLICE_24 SLICE_24( .DI1(\image_shiftreg[18].sig_018.FeedThruLUT ), 
    .DI0(\image_shiftreg[17].sig_017.FeedThruLUT ), .D1(\image_shiftreg[18] ), 
    .C0(\image_shiftreg[17] ), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(\image_shiftreg[16] ), .Q1(\image_shiftreg[17] ), 
    .F0(\image_shiftreg[17].sig_017.FeedThruLUT ), 
    .F1(\image_shiftreg[18].sig_018.FeedThruLUT ));
  SLICE_26 SLICE_26( .DI1(\image_shiftreg[20].sig_020.FeedThruLUT ), 
    .DI0(\image_shiftreg[19].sig_019.FeedThruLUT ), .C1(\image_shiftreg[20] ), 
    .C0(\image_shiftreg[19] ), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(\image_shiftreg[18] ), .Q1(\image_shiftreg[19] ), 
    .F0(\image_shiftreg[19].sig_019.FeedThruLUT ), 
    .F1(\image_shiftreg[20].sig_020.FeedThruLUT ));
  SLICE_28 SLICE_28( .DI1(\image_shiftreg[22].sig_022.FeedThruLUT ), 
    .DI0(\image_shiftreg[21].sig_021.FeedThruLUT ), .D1(\image_shiftreg[22] ), 
    .A0(\image_shiftreg[21] ), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(\image_shiftreg[20] ), .Q1(\image_shiftreg[21] ), 
    .F0(\image_shiftreg[21].sig_021.FeedThruLUT ), 
    .F1(\image_shiftreg[22].sig_022.FeedThruLUT ));
  SLICE_30 SLICE_30( .DI1(\image_shiftreg[24].sig_024.FeedThruLUT ), 
    .DI0(\image_shiftreg[23].sig_023.FeedThruLUT ), .A1(\image_shiftreg[24] ), 
    .C0(\image_shiftreg[23] ), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(\image_shiftreg[22] ), .Q1(\image_shiftreg[23] ), 
    .F0(\image_shiftreg[23].sig_023.FeedThruLUT ), 
    .F1(\image_shiftreg[24].sig_024.FeedThruLUT ));
  SLICE_32 SLICE_32( .DI1(\image_shiftreg[26].sig_026.FeedThruLUT ), 
    .DI0(\image_shiftreg[25].sig_025.FeedThruLUT ), .A1(\image_shiftreg[26] ), 
    .C0(\image_shiftreg[25] ), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(\image_shiftreg[24] ), .Q1(\image_shiftreg[25] ), 
    .F0(\image_shiftreg[25].sig_025.FeedThruLUT ), 
    .F1(\image_shiftreg[26].sig_026.FeedThruLUT ));
  SLICE_34 SLICE_34( .DI1(\image_shiftreg[28].sig_028.FeedThruLUT ), 
    .DI0(\image_shiftreg[27].sig_027.FeedThruLUT ), .D1(\image_shiftreg[28] ), 
    .A0(\image_shiftreg[27] ), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(\image_shiftreg[26] ), .Q1(\image_shiftreg[27] ), 
    .F0(\image_shiftreg[27].sig_027.FeedThruLUT ), 
    .F1(\image_shiftreg[28].sig_028.FeedThruLUT ));
  SLICE_36 SLICE_36( .DI1(\image_shiftreg[30].sig_030.FeedThruLUT ), 
    .DI0(\image_shiftreg[29].sig_029.FeedThruLUT ), .C1(\image_shiftreg[30] ), 
    .B0(\image_shiftreg[29] ), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(\image_shiftreg[28] ), .Q1(\image_shiftreg[29] ), 
    .F0(\image_shiftreg[29].sig_029.FeedThruLUT ), 
    .F1(\image_shiftreg[30].sig_030.FeedThruLUT ));
  SLICE_38 SLICE_38( .DI1(\image_shiftreg[32].sig_032.FeedThruLUT ), 
    .DI0(\image_shiftreg[31].sig_031.FeedThruLUT ), .D1(\image_shiftreg[32] ), 
    .C0(\image_shiftreg[31] ), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(\image_shiftreg[30] ), .Q1(\image_shiftreg[31] ), 
    .F0(\image_shiftreg[31].sig_031.FeedThruLUT ), 
    .F1(\image_shiftreg[32].sig_032.FeedThruLUT ));
  SLICE_40 SLICE_40( .DI1(\image_shiftreg[34].sig_034.FeedThruLUT ), 
    .DI0(\image_shiftreg[33].sig_033.FeedThruLUT ), .D1(\image_shiftreg[34] ), 
    .C0(\image_shiftreg[33] ), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(\image_shiftreg[32] ), .Q1(\image_shiftreg[33] ), 
    .F0(\image_shiftreg[33].sig_033.FeedThruLUT ), 
    .F1(\image_shiftreg[34].sig_034.FeedThruLUT ));
  SLICE_42 SLICE_42( .DI1(\image_shiftreg[36].sig_036.FeedThruLUT ), 
    .DI0(\image_shiftreg[35].sig_035.FeedThruLUT ), .C1(\image_shiftreg[36] ), 
    .C0(\image_shiftreg[35] ), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(\image_shiftreg[34] ), .Q1(\image_shiftreg[35] ), 
    .F0(\image_shiftreg[35].sig_035.FeedThruLUT ), 
    .F1(\image_shiftreg[36].sig_036.FeedThruLUT ));
  SLICE_44 SLICE_44( .DI1(\image_shiftreg[38].sig_038.FeedThruLUT ), 
    .DI0(\image_shiftreg[37].sig_037.FeedThruLUT ), .A1(\image_shiftreg[38] ), 
    .A0(\image_shiftreg[37] ), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(\image_shiftreg[36] ), .Q1(\image_shiftreg[37] ), 
    .F0(\image_shiftreg[37].sig_037.FeedThruLUT ), 
    .F1(\image_shiftreg[38].sig_038.FeedThruLUT ));
  SLICE_46 SLICE_46( .DI1(\image_shiftreg[40].sig_040.FeedThruLUT ), 
    .DI0(\image_shiftreg[39].sig_039.FeedThruLUT ), .C1(\image_shiftreg[40] ), 
    .A0(\image_shiftreg[39] ), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(\image_shiftreg[38] ), .Q1(\image_shiftreg[39] ), 
    .F0(\image_shiftreg[39].sig_039.FeedThruLUT ), 
    .F1(\image_shiftreg[40].sig_040.FeedThruLUT ));
  SLICE_48 SLICE_48( .DI1(\image_shiftreg[42].sig_042.FeedThruLUT ), 
    .DI0(\image_shiftreg[41].sig_041.FeedThruLUT ), .B1(\image_shiftreg[42] ), 
    .C0(\image_shiftreg[41] ), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(\image_shiftreg[40] ), .Q1(\image_shiftreg[41] ), 
    .F0(\image_shiftreg[41].sig_041.FeedThruLUT ), 
    .F1(\image_shiftreg[42].sig_042.FeedThruLUT ));
  SLICE_50 SLICE_50( .DI1(\image_shiftreg[44].sig_044.FeedThruLUT ), 
    .DI0(\image_shiftreg[43].sig_043.FeedThruLUT ), .B1(\image_shiftreg[44] ), 
    .A0(\image_shiftreg[43] ), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(\image_shiftreg[42] ), .Q1(\image_shiftreg[43] ), 
    .F0(\image_shiftreg[43].sig_043.FeedThruLUT ), 
    .F1(\image_shiftreg[44].sig_044.FeedThruLUT ));
  SLICE_52 SLICE_52( .DI1(\image_shiftreg[46].sig_046.FeedThruLUT ), 
    .DI0(\image_shiftreg[45].sig_045.FeedThruLUT ), .D1(\image_shiftreg[46] ), 
    .B0(\image_shiftreg[45] ), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(\image_shiftreg[44] ), .Q1(\image_shiftreg[45] ), 
    .F0(\image_shiftreg[45].sig_045.FeedThruLUT ), 
    .F1(\image_shiftreg[46].sig_046.FeedThruLUT ));
  SLICE_54 SLICE_54( .DI1(\image_shiftreg[48].sig_048.FeedThruLUT ), 
    .DI0(\image_shiftreg[47].sig_047.FeedThruLUT ), .D1(\image_shiftreg[48] ), 
    .C0(\image_shiftreg[47] ), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(\image_shiftreg[46] ), .Q1(\image_shiftreg[47] ), 
    .F0(\image_shiftreg[47].sig_047.FeedThruLUT ), 
    .F1(\image_shiftreg[48].sig_048.FeedThruLUT ));
  SLICE_56 SLICE_56( .DI1(\image_shiftreg[50].sig_050.FeedThruLUT ), 
    .DI0(\image_shiftreg[49].sig_049.FeedThruLUT ), .A1(\image_shiftreg[50] ), 
    .B0(\image_shiftreg[49] ), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(\image_shiftreg[48] ), .Q1(\image_shiftreg[49] ), 
    .F0(\image_shiftreg[49].sig_049.FeedThruLUT ), 
    .F1(\image_shiftreg[50].sig_050.FeedThruLUT ));
  SLICE_58 SLICE_58( .DI1(\image_shiftreg[52].sig_052.FeedThruLUT ), 
    .DI0(\image_shiftreg[51].sig_051.FeedThruLUT ), .D1(\image_shiftreg[52] ), 
    .C0(\image_shiftreg[51] ), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(\image_shiftreg[50] ), .Q1(\image_shiftreg[51] ), 
    .F0(\image_shiftreg[51].sig_051.FeedThruLUT ), 
    .F1(\image_shiftreg[52].sig_052.FeedThruLUT ));
  SLICE_60 SLICE_60( .DI1(\image_shiftreg[54].sig_054.FeedThruLUT ), 
    .DI0(\image_shiftreg[53].sig_053.FeedThruLUT ), .A1(\image_shiftreg[54] ), 
    .C0(\image_shiftreg[53] ), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(\image_shiftreg[52] ), .Q1(\image_shiftreg[53] ), 
    .F0(\image_shiftreg[53].sig_053.FeedThruLUT ), 
    .F1(\image_shiftreg[54].sig_054.FeedThruLUT ));
  SLICE_62 SLICE_62( .DI1(\image_shiftreg[56].sig_056.FeedThruLUT ), 
    .DI0(\image_shiftreg[55].sig_055.FeedThruLUT ), .C1(\image_shiftreg[56] ), 
    .A0(\image_shiftreg[55] ), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(\image_shiftreg[54] ), .Q1(\image_shiftreg[55] ), 
    .F0(\image_shiftreg[55].sig_055.FeedThruLUT ), 
    .F1(\image_shiftreg[56].sig_056.FeedThruLUT ));
  SLICE_64 SLICE_64( .DI1(\image_shiftreg[58].sig_058.FeedThruLUT ), 
    .DI0(\image_shiftreg[57].sig_057.FeedThruLUT ), .A1(\image_shiftreg[58] ), 
    .C0(\image_shiftreg[57] ), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(\image_shiftreg[56] ), .Q1(\image_shiftreg[57] ), 
    .F0(\image_shiftreg[57].sig_057.FeedThruLUT ), 
    .F1(\image_shiftreg[58].sig_058.FeedThruLUT ));
  SLICE_66 SLICE_66( .DI1(\image_shiftreg[60].sig_060.FeedThruLUT ), 
    .DI0(\image_shiftreg[59].sig_059.FeedThruLUT ), .D1(\image_shiftreg[60] ), 
    .A0(\image_shiftreg[59] ), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(\image_shiftreg[58] ), .Q1(\image_shiftreg[59] ), 
    .F0(\image_shiftreg[59].sig_059.FeedThruLUT ), 
    .F1(\image_shiftreg[60].sig_060.FeedThruLUT ));
  SLICE_68 SLICE_68( .DI1(\image_shiftreg[62].sig_062.FeedThruLUT ), 
    .DI0(\image_shiftreg[61].sig_061.FeedThruLUT ), .D1(\image_shiftreg[62] ), 
    .C0(\image_shiftreg[61] ), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(\image_shiftreg[60] ), .Q1(\image_shiftreg[61] ), 
    .F0(\image_shiftreg[61].sig_061.FeedThruLUT ), 
    .F1(\image_shiftreg[62].sig_062.FeedThruLUT ));
  SLICE_70 SLICE_70( .DI1(\image_shiftreg[64].sig_064.FeedThruLUT ), 
    .DI0(\image_shiftreg[63].sig_063.FeedThruLUT ), .B1(\image_shiftreg[64] ), 
    .C0(\image_shiftreg[63] ), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(\image_shiftreg[62] ), .Q1(\image_shiftreg[63] ), 
    .F0(\image_shiftreg[63].sig_063.FeedThruLUT ), 
    .F1(\image_shiftreg[64].sig_064.FeedThruLUT ));
  SLICE_72 SLICE_72( .DI1(\image_shiftreg[66].sig_066.FeedThruLUT ), 
    .DI0(\image_shiftreg[65].sig_065.FeedThruLUT ), .B1(\image_shiftreg[66] ), 
    .D0(\image_shiftreg[65] ), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(\image_shiftreg[64] ), .Q1(\image_shiftreg[65] ), 
    .F0(\image_shiftreg[65].sig_065.FeedThruLUT ), 
    .F1(\image_shiftreg[66].sig_066.FeedThruLUT ));
  SLICE_74 SLICE_74( .DI1(\image_shiftreg[68].sig_068.FeedThruLUT ), 
    .DI0(\image_shiftreg[67].sig_067.FeedThruLUT ), .C1(\image_shiftreg[68] ), 
    .C0(\image_shiftreg[67] ), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(\image_shiftreg[66] ), .Q1(\image_shiftreg[67] ), 
    .F0(\image_shiftreg[67].sig_067.FeedThruLUT ), 
    .F1(\image_shiftreg[68].sig_068.FeedThruLUT ));
  SLICE_76 SLICE_76( .DI1(\image_shiftreg[70].sig_070.FeedThruLUT ), 
    .DI0(\image_shiftreg[69].sig_069.FeedThruLUT ), .A1(\image_shiftreg[70] ), 
    .C0(\image_shiftreg[69] ), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(\image_shiftreg[68] ), .Q1(\image_shiftreg[69] ), 
    .F0(\image_shiftreg[69].sig_069.FeedThruLUT ), 
    .F1(\image_shiftreg[70].sig_070.FeedThruLUT ));
  SLICE_78 SLICE_78( .DI1(\image_shiftreg[72].sig_072.FeedThruLUT ), 
    .DI0(\image_shiftreg[71].sig_071.FeedThruLUT ), .D1(\image_shiftreg[72] ), 
    .A0(\image_shiftreg[71] ), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(\image_shiftreg[70] ), .Q1(\image_shiftreg[71] ), 
    .F0(\image_shiftreg[71].sig_071.FeedThruLUT ), 
    .F1(\image_shiftreg[72].sig_072.FeedThruLUT ));
  SLICE_80 SLICE_80( .DI1(\image_shiftreg[74].sig_074.FeedThruLUT ), 
    .DI0(\image_shiftreg[73].sig_073.FeedThruLUT ), .A1(\image_shiftreg[74] ), 
    .A0(\image_shiftreg[73] ), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(\image_shiftreg[72] ), .Q1(\image_shiftreg[73] ), 
    .F0(\image_shiftreg[73].sig_073.FeedThruLUT ), 
    .F1(\image_shiftreg[74].sig_074.FeedThruLUT ));
  SLICE_82 SLICE_82( .DI1(\image_shiftreg[76].sig_076.FeedThruLUT ), 
    .DI0(\image_shiftreg[75].sig_075.FeedThruLUT ), .D1(\image_shiftreg[76] ), 
    .C0(\image_shiftreg[75] ), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(\image_shiftreg[74] ), .Q1(\image_shiftreg[75] ), 
    .F0(\image_shiftreg[75].sig_075.FeedThruLUT ), 
    .F1(\image_shiftreg[76].sig_076.FeedThruLUT ));
  SLICE_84 SLICE_84( .DI1(\image_shiftreg[78].sig_078.FeedThruLUT ), 
    .DI0(\image_shiftreg[77].sig_077.FeedThruLUT ), .C1(\image_shiftreg[78] ), 
    .B0(\image_shiftreg[77] ), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(\image_shiftreg[76] ), .Q1(\image_shiftreg[77] ), 
    .F0(\image_shiftreg[77].sig_077.FeedThruLUT ), 
    .F1(\image_shiftreg[78].sig_078.FeedThruLUT ));
  SLICE_86 SLICE_86( .DI1(\image_shiftreg[80].sig_080.FeedThruLUT ), 
    .DI0(\image_shiftreg[79].sig_079.FeedThruLUT ), .D1(\image_shiftreg[80] ), 
    .C0(\image_shiftreg[79] ), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(\image_shiftreg[78] ), .Q1(\image_shiftreg[79] ), 
    .F0(\image_shiftreg[79].sig_079.FeedThruLUT ), 
    .F1(\image_shiftreg[80].sig_080.FeedThruLUT ));
  SLICE_88 SLICE_88( .DI1(\image_shiftreg[82].sig_082.FeedThruLUT ), 
    .DI0(\image_shiftreg[81].sig_081.FeedThruLUT ), .A1(\image_shiftreg[82] ), 
    .D0(\image_shiftreg[81] ), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(\image_shiftreg[80] ), .Q1(\image_shiftreg[81] ), 
    .F0(\image_shiftreg[81].sig_081.FeedThruLUT ), 
    .F1(\image_shiftreg[82].sig_082.FeedThruLUT ));
  SLICE_90 SLICE_90( .DI1(\image_shiftreg[84].sig_084.FeedThruLUT ), 
    .DI0(\image_shiftreg[83].sig_083.FeedThruLUT ), .B1(\image_shiftreg[84] ), 
    .B0(\image_shiftreg[83] ), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(\image_shiftreg[82] ), .Q1(\image_shiftreg[83] ), 
    .F0(\image_shiftreg[83].sig_083.FeedThruLUT ), 
    .F1(\image_shiftreg[84].sig_084.FeedThruLUT ));
  SLICE_92 SLICE_92( .DI1(\image_shiftreg[86].sig_086.FeedThruLUT ), 
    .DI0(\image_shiftreg[85].sig_085.FeedThruLUT ), .A1(\image_shiftreg[86] ), 
    .B0(\image_shiftreg[85] ), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(\image_shiftreg[84] ), .Q1(\image_shiftreg[85] ), 
    .F0(\image_shiftreg[85].sig_085.FeedThruLUT ), 
    .F1(\image_shiftreg[86].sig_086.FeedThruLUT ));
  SLICE_94 SLICE_94( .DI1(\image_shiftreg[88].sig_088.FeedThruLUT ), 
    .DI0(\image_shiftreg[87].sig_087.FeedThruLUT ), .B1(\image_shiftreg[88] ), 
    .D0(\image_shiftreg[87] ), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(\image_shiftreg[86] ), .Q1(\image_shiftreg[87] ), 
    .F0(\image_shiftreg[87].sig_087.FeedThruLUT ), 
    .F1(\image_shiftreg[88].sig_088.FeedThruLUT ));
  SLICE_96 SLICE_96( .DI1(\image_shiftreg[90].sig_090.FeedThruLUT ), 
    .DI0(\image_shiftreg[89].sig_089.FeedThruLUT ), .D1(\image_shiftreg[90] ), 
    .A0(\image_shiftreg[89] ), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(\image_shiftreg[88] ), .Q1(\image_shiftreg[89] ), 
    .F0(\image_shiftreg[89].sig_089.FeedThruLUT ), 
    .F1(\image_shiftreg[90].sig_090.FeedThruLUT ));
  SLICE_98 SLICE_98( .DI1(\image_shiftreg[92].sig_092.FeedThruLUT ), 
    .DI0(\image_shiftreg[91].sig_091.FeedThruLUT ), .D1(\image_shiftreg[92] ), 
    .B0(\image_shiftreg[91] ), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(\image_shiftreg[90] ), .Q1(\image_shiftreg[91] ), 
    .F0(\image_shiftreg[91].sig_091.FeedThruLUT ), 
    .F1(\image_shiftreg[92].sig_092.FeedThruLUT ));
  SLICE_100 SLICE_100( .DI1(\image_shiftreg[94].sig_094.FeedThruLUT ), 
    .DI0(\image_shiftreg[93].sig_093.FeedThruLUT ), .D1(\image_shiftreg[94] ), 
    .C0(\image_shiftreg[93] ), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(\image_shiftreg[92] ), .Q1(\image_shiftreg[93] ), 
    .F0(\image_shiftreg[93].sig_093.FeedThruLUT ), 
    .F1(\image_shiftreg[94].sig_094.FeedThruLUT ));
  SLICE_102 SLICE_102( .DI1(\image_shiftreg[96].sig_096.FeedThruLUT ), 
    .DI0(\image_shiftreg[95].sig_095.FeedThruLUT ), .B1(\image_shiftreg[96] ), 
    .C0(\image_shiftreg[95] ), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(\image_shiftreg[94] ), .Q1(\image_shiftreg[95] ), 
    .F0(\image_shiftreg[95].sig_095.FeedThruLUT ), 
    .F1(\image_shiftreg[96].sig_096.FeedThruLUT ));
  SLICE_104 SLICE_104( .DI1(\image_shiftreg[98].sig_098.FeedThruLUT ), 
    .DI0(\image_shiftreg[97].sig_097.FeedThruLUT ), .D1(\image_shiftreg[98] ), 
    .C0(\image_shiftreg[97] ), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(\image_shiftreg[96] ), .Q1(\image_shiftreg[97] ), 
    .F0(\image_shiftreg[97].sig_097.FeedThruLUT ), 
    .F1(\image_shiftreg[98].sig_098.FeedThruLUT ));
  SLICE_106 SLICE_106( .DI1(\image_shiftreg[100].sig_100.FeedThruLUT ), 
    .DI0(\image_shiftreg[99].sig_099.FeedThruLUT ), .B1(\image_shiftreg[100] ), 
    .C0(\image_shiftreg[99] ), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(\image_shiftreg[98] ), .Q1(\image_shiftreg[99] ), 
    .F0(\image_shiftreg[99].sig_099.FeedThruLUT ), 
    .F1(\image_shiftreg[100].sig_100.FeedThruLUT ));
  SLICE_108 SLICE_108( .DI1(\image_shiftreg[102].sig_102.FeedThruLUT ), 
    .DI0(\image_shiftreg[101].sig_101.FeedThruLUT ), 
    .C1(\image_shiftreg[102] ), .A0(\image_shiftreg[101] ), .CE(n2025), 
    .LSR(reset_c), .CLK(clk), .Q0(\image_shiftreg[100] ), 
    .Q1(\image_shiftreg[101] ), .F0(\image_shiftreg[101].sig_101.FeedThruLUT ), 
    .F1(\image_shiftreg[102].sig_102.FeedThruLUT ));
  SLICE_110 SLICE_110( .DI1(\image_shiftreg[104].sig_104.FeedThruLUT ), 
    .DI0(\image_shiftreg[103].sig_103.FeedThruLUT ), 
    .D1(\image_shiftreg[104] ), .A0(\image_shiftreg[103] ), .CE(n2025), 
    .LSR(reset_c), .CLK(clk), .Q0(\image_shiftreg[102] ), 
    .Q1(\image_shiftreg[103] ), .F0(\image_shiftreg[103].sig_103.FeedThruLUT ), 
    .F1(\image_shiftreg[104].sig_104.FeedThruLUT ));
  SLICE_112 SLICE_112( .DI1(\image_shiftreg[106].sig_106.FeedThruLUT ), 
    .DI0(\image_shiftreg[105].sig_105.FeedThruLUT ), 
    .C1(\image_shiftreg[106] ), .C0(\image_shiftreg[105] ), .CE(n2025), 
    .LSR(reset_c), .CLK(clk), .Q0(\image_shiftreg[104] ), 
    .Q1(\image_shiftreg[105] ), .F0(\image_shiftreg[105].sig_105.FeedThruLUT ), 
    .F1(\image_shiftreg[106].sig_106.FeedThruLUT ));
  SLICE_114 SLICE_114( .DI1(\image_shiftreg[108].sig_108.FeedThruLUT ), 
    .DI0(\image_shiftreg[107].sig_107.FeedThruLUT ), 
    .D1(\image_shiftreg[108] ), .A0(\image_shiftreg[107] ), .CE(n2025), 
    .LSR(reset_c), .CLK(clk), .Q0(\image_shiftreg[106] ), 
    .Q1(\image_shiftreg[107] ), .F0(\image_shiftreg[107].sig_107.FeedThruLUT ), 
    .F1(\image_shiftreg[108].sig_108.FeedThruLUT ));
  SLICE_116 SLICE_116( .DI1(\image_shiftreg[110].sig_110.FeedThruLUT ), 
    .DI0(\image_shiftreg[109].sig_109.FeedThruLUT ), 
    .C1(\image_shiftreg[110] ), .C0(\image_shiftreg[109] ), .CE(n2025), 
    .LSR(reset_c), .CLK(clk), .Q0(\image_shiftreg[108] ), 
    .Q1(\image_shiftreg[109] ), .F0(\image_shiftreg[109].sig_109.FeedThruLUT ), 
    .F1(\image_shiftreg[110].sig_110.FeedThruLUT ));
  SLICE_118 SLICE_118( .DI1(\image_shiftreg[112].sig_112.FeedThruLUT ), 
    .DI0(\image_shiftreg[111].sig_111.FeedThruLUT ), 
    .C1(\image_shiftreg[112] ), .C0(\image_shiftreg[111] ), .CE(n2025), 
    .LSR(reset_c), .CLK(clk), .Q0(\image_shiftreg[110] ), 
    .Q1(\image_shiftreg[111] ), .F0(\image_shiftreg[111].sig_111.FeedThruLUT ), 
    .F1(\image_shiftreg[112].sig_112.FeedThruLUT ));
  SLICE_120 SLICE_120( .DI1(\image_shiftreg[114].sig_114.FeedThruLUT ), 
    .DI0(\image_shiftreg[113].sig_113.FeedThruLUT ), 
    .A1(\image_shiftreg[114] ), .A0(\image_shiftreg[113] ), .CE(n2025), 
    .LSR(reset_c), .CLK(clk), .Q0(\image_shiftreg[112] ), 
    .Q1(\image_shiftreg[113] ), .F0(\image_shiftreg[113].sig_113.FeedThruLUT ), 
    .F1(\image_shiftreg[114].sig_114.FeedThruLUT ));
  SLICE_122 SLICE_122( .DI1(\image_shiftreg[116].sig_116.FeedThruLUT ), 
    .DI0(\image_shiftreg[115].sig_115.FeedThruLUT ), 
    .D1(\image_shiftreg[116] ), .C0(\image_shiftreg[115] ), .CE(n2025), 
    .LSR(reset_c), .CLK(clk), .Q0(\image_shiftreg[114] ), 
    .Q1(\image_shiftreg[115] ), .F0(\image_shiftreg[115].sig_115.FeedThruLUT ), 
    .F1(\image_shiftreg[116].sig_116.FeedThruLUT ));
  SLICE_124 SLICE_124( .DI1(\image_shiftreg[118].sig_118.FeedThruLUT ), 
    .DI0(\image_shiftreg[117].sig_117.FeedThruLUT ), 
    .B1(\image_shiftreg[118] ), .C0(\image_shiftreg[117] ), .CE(n2025), 
    .LSR(reset_c), .CLK(clk), .Q0(\image_shiftreg[116] ), 
    .Q1(\image_shiftreg[117] ), .F0(\image_shiftreg[117].sig_117.FeedThruLUT ), 
    .F1(\image_shiftreg[118].sig_118.FeedThruLUT ));
  SLICE_126 SLICE_126( .DI1(\led_array_c_120.sig_120.FeedThruLUT ), 
    .DI0(\image_shiftreg[119].sig_119.FeedThruLUT ), .A1(led_array_c_120), 
    .A0(\image_shiftreg[119] ), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(\image_shiftreg[118] ), .Q1(\image_shiftreg[119] ), 
    .F0(\image_shiftreg[119].sig_119.FeedThruLUT ), 
    .F1(\led_array_c_120.sig_120.FeedThruLUT ));
  SLICE_128 SLICE_128( .DI1(\led_array_c_122.sig_122.FeedThruLUT ), 
    .DI0(\led_array_c_121.sig_121.FeedThruLUT ), .C1(led_array_c_122), 
    .A0(led_array_c_121), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(led_array_c_120), .Q1(led_array_c_121), 
    .F0(\led_array_c_121.sig_121.FeedThruLUT ), 
    .F1(\led_array_c_122.sig_122.FeedThruLUT ));
  SLICE_130 SLICE_130( .DI1(\led_array_c_124.sig_124.FeedThruLUT ), 
    .DI0(\led_array_c_123.sig_123.FeedThruLUT ), .B1(led_array_c_124), 
    .A0(led_array_c_123), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(led_array_c_122), .Q1(led_array_c_123), 
    .F0(\led_array_c_123.sig_123.FeedThruLUT ), 
    .F1(\led_array_c_124.sig_124.FeedThruLUT ));
  SLICE_132 SLICE_132( .DI1(\led_array_c_126.sig_126.FeedThruLUT ), 
    .DI0(\led_array_c_125.sig_125.FeedThruLUT ), .A1(led_array_c_126), 
    .C0(led_array_c_125), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(led_array_c_124), .Q1(led_array_c_125), 
    .F0(\led_array_c_125.sig_125.FeedThruLUT ), 
    .F1(\led_array_c_126.sig_126.FeedThruLUT ));
  SLICE_134 SLICE_134( .DI1(\COPI_c.sig_128.FeedThruLUT ), 
    .DI0(\led_array_c_127.sig_127.FeedThruLUT ), .A1(COPI_c), 
    .C0(led_array_c_127), .CE(n2025), .LSR(reset_c), .CLK(clk), 
    .Q0(led_array_c_126), .Q1(led_array_c_127), 
    .F0(\led_array_c_127.sig_127.FeedThruLUT ), 
    .F1(\COPI_c.sig_128.FeedThruLUT ));
  SLICE_137 SLICE_137( .DI1(n2029), .DI0(n2031), .D1(\bit_counter[1] ), 
    .C1(CS_c), .A1(\bit_counter[0] ), .D0(CS_c), .C0(\bit_counter[1] ), 
    .B0(\bit_counter[0] ), .A0(\bit_counter[2] ), .CE(n2079), .LSR(reset_c), 
    .CLK(clk), .Q0(\bit_counter[2] ), .Q1(\bit_counter[1] ), .F0(n2031), 
    .F1(n2029));
  SLICE_141 SLICE_141( .D1(\bit_counter[1] ), .C1(n2584), 
    .B1(\image_shiftreg[93] ), .A1(\image_shiftreg[92] ), 
    .D0(\bit_counter[0] ), .C0(\bit_counter[1] ), .B0(\image_shiftreg[95] ), 
    .A0(\image_shiftreg[94] ), .F0(n2584), .F1(n2587));
  SLICE_143 SLICE_143( .D1(\bit_counter[1] ), .C1(n2524), 
    .B1(\image_shiftreg[37] ), .A1(\image_shiftreg[36] ), 
    .D0(\bit_counter[1] ), .C0(\bit_counter[0] ), .B0(\image_shiftreg[38] ), 
    .A0(\image_shiftreg[39] ), .F0(n2524), .F1(n2527));
  SLICE_145 SLICE_145( .D1(\bit_counter[1] ), .C1(n2590), 
    .B1(\image_shiftreg[64] ), .A1(\image_shiftreg[65] ), 
    .D0(\bit_counter[0] ), .C0(\bit_counter[1] ), .B0(\image_shiftreg[66] ), 
    .A0(\image_shiftreg[67] ), .F0(n2590), .F1(n2593));
  SLICE_147 SLICE_147( .D1(n2629), .C1(n2671), .B1(n4_adj_1), 
    .A1(\byte_counter[2] ), .D0(n2457), .C0(n2668), .B0(\CIPO_N_286[4] ), 
    .A0(n2611), .F0(n2671), .F1(n2467));
  SLICE_148 SLICE_148( .D1(\CIPO_N_286[3] ), .C1(n2414), .B1(n2415), 
    .A1(\CIPO_N_286[4] ), .D0(\bit_counter[2] ), .C0(n2605), .B0(n2521), 
    .F0(n2414), .F1(n2668));
  SLICE_149 SLICE_149( .D1(\bit_counter[1] ), .C1(n2662), 
    .B1(\image_shiftreg[45] ), .A1(\image_shiftreg[44] ), 
    .D0(\bit_counter[1] ), .C0(\image_shiftreg[47] ), 
    .B0(\image_shiftreg[46] ), .A0(\bit_counter[0] ), .F0(n2662), .F1(n2401));
  SLICE_151 SLICE_151( .D1(\image_shiftreg[5] ), .C1(n2530), 
    .B1(\image_shiftreg[4] ), .A1(\bit_counter[1] ), .D0(\bit_counter[1] ), 
    .C0(\image_shiftreg[6] ), .B0(\bit_counter[0] ), .A0(\image_shiftreg[7] ), 
    .F0(n2530), .F1(n2533));
  SLICE_153 SLICE_153( .D1(\bit_counter[1] ), .C1(n2596), 
    .B1(\image_shiftreg[72] ), .A1(\image_shiftreg[73] ), 
    .D0(\bit_counter[1] ), .C0(\bit_counter[0] ), .B0(\image_shiftreg[74] ), 
    .A0(\image_shiftreg[75] ), .F0(n2596), .F1(n2599));
  SLICE_155 SLICE_155( .D1(\bit_counter[1] ), .C1(n2572), 
    .B1(\image_shiftreg[29] ), .A1(\image_shiftreg[28] ), 
    .D0(\bit_counter[0] ), .C0(\image_shiftreg[31] ), 
    .B0(\image_shiftreg[30] ), .A0(\bit_counter[1] ), .F0(n2572), .F1(n2488));
  SLICE_157 SLICE_157( .D1(\bit_counter[1] ), .C1(n2638), .B1(led_array_c_121), 
    .A1(led_array_c_120), .D0(\bit_counter[0] ), .C0(\bit_counter[1] ), 
    .B0(led_array_c_123), .A0(led_array_c_122), .F0(n2638), .F1(n2641));
  SLICE_159 SLICE_159( .D1(n2502), .C1(n2501), .B1(\bit_counter[2] ), 
    .A1(\bit_counter[1] ), .D0(\image_shiftreg[84] ), .C0(\bit_counter[0] ), 
    .B0(\image_shiftreg[85] ), .F0(n2501), .F1(n2614));
  SLICE_160 SLICE_160( .D1(n2614), .C1(n2504), .B1(n2505), 
    .A1(\bit_counter[2] ), .D0(\image_shiftreg[81] ), .C0(\bit_counter[0] ), 
    .A0(\image_shiftreg[80] ), .F0(n2504), .F1(n2617));
  SLICE_161 SLICE_161( .D1(\bit_counter[1] ), .C1(n2644), 
    .B1(\image_shiftreg[20] ), .A1(\image_shiftreg[21] ), 
    .D0(\bit_counter[0] ), .C0(\bit_counter[1] ), .B0(\image_shiftreg[22] ), 
    .A0(\image_shiftreg[23] ), .F0(n2644), .F1(n2473));
  SLICE_163 SLICE_163( .D1(\image_shiftreg[52] ), .C1(n2548), 
    .B1(\bit_counter[1] ), .A1(\image_shiftreg[53] ), .D0(\bit_counter[0] ), 
    .C0(\bit_counter[1] ), .B0(\image_shiftreg[54] ), 
    .A0(\image_shiftreg[55] ), .F0(n2548), .F1(n2551));
  SLICE_165 SLICE_165( .D0(n2560), .C0(n2464), .B0(n2473), 
    .A0(\CIPO_N_286[3] ), .F0(n2563));
  SLICE_166 SLICE_166( .D0(\bit_counter[2] ), .C0(n2488), .B0(n2476), 
    .A0(\CIPO_N_286[3] ), .F0(n2560));
  SLICE_167 SLICE_167( .D1(\bit_counter[1] ), .C1(n2566), 
    .B1(\image_shiftreg[88] ), .A1(\image_shiftreg[89] ), 
    .D0(\bit_counter[0] ), .C0(\bit_counter[1] ), .B0(\image_shiftreg[91] ), 
    .A0(\image_shiftreg[90] ), .F0(n2566), .F1(n2569));
  SLICE_169 SLICE_169( .D1(\bit_counter[1] ), .C1(n2674), 
    .B1(\image_shiftreg[32] ), .A1(\image_shiftreg[33] ), 
    .D0(\bit_counter[1] ), .C0(\image_shiftreg[34] ), .B0(\bit_counter[0] ), 
    .A0(\image_shiftreg[35] ), .F0(n2674), .F1(n2428));
  SLICE_171 SLICE_171( .D1(n2545), .C1(n2557), .B1(\CIPO_N_286[4] ), 
    .A1(\CIPO_N_286[5] ), .D0(n2554), .C0(n2407), .B0(n2551), 
    .A0(\CIPO_N_286[3] ), .F0(n2557), .F1(n2578));
  SLICE_172 SLICE_172( .D0(n2419), .C0(n2422), .B0(\CIPO_N_286[3] ), 
    .A0(\bit_counter[2] ), .F0(n2554));
  SLICE_173 SLICE_173( .D1(\image_shiftreg[108] ), .C1(n2656), 
    .B1(\image_shiftreg[109] ), .A1(\bit_counter[1] ), .D0(\bit_counter[0] ), 
    .C0(\image_shiftreg[111] ), .B0(\image_shiftreg[110] ), 
    .A0(\bit_counter[1] ), .F0(n2656), .F1(n2659));
  SLICE_175 SLICE_175( .D1(n2626), .C1(n2507), .B1(\CIPO_N_286[4] ), 
    .A1(n2508), .D0(\bit_counter[2] ), .C0(n2701), .A0(n2593), .F0(n2507), 
    .F1(n2629));
  SLICE_176 SLICE_176( .D1(n2617), .C1(n2460), .B1(\CIPO_N_286[4] ), 
    .A1(\CIPO_N_286[3] ), .D0(n2569), .C0(n2587), .A0(\bit_counter[2] ), 
    .F0(n2460), .F1(n2626));
  SLICE_177 SLICE_177( .D1(\image_shiftreg[48] ), .C1(n2620), 
    .B1(\bit_counter[1] ), .A1(\image_shiftreg[49] ), .D0(\bit_counter[1] ), 
    .C0(\image_shiftreg[51] ), .B0(\image_shiftreg[50] ), 
    .A0(\bit_counter[0] ), .F0(n2620), .F1(n2407));
  SLICE_179 SLICE_179( .D1(\bit_counter[1] ), .C1(n2680), 
    .B1(\image_shiftreg[16] ), .A1(\image_shiftreg[17] ), 
    .D0(\bit_counter[0] ), .C0(\bit_counter[1] ), .B0(\image_shiftreg[18] ), 
    .A0(\image_shiftreg[19] ), .F0(n2680), .F1(n2464));
  SLICE_181 SLICE_181( .D1(\image_shiftreg[112] ), .C1(n2602), 
    .B1(\image_shiftreg[113] ), .A1(\bit_counter[1] ), .D0(\bit_counter[0] ), 
    .C0(\image_shiftreg[115] ), .B0(\bit_counter[1] ), 
    .A0(\image_shiftreg[114] ), .F0(n2602), .F1(n2605));
  SLICE_183 SLICE_183( .D1(\bit_counter[1] ), .C1(n2518), 
    .B1(\image_shiftreg[116] ), .A1(\image_shiftreg[117] ), 
    .D0(\bit_counter[0] ), .C0(\bit_counter[1] ), .B0(\image_shiftreg[118] ), 
    .A0(\image_shiftreg[119] ), .F0(n2518), .F1(n2521));
  SLICE_185 SLICE_185( .D1(led_array_c_124), .C1(n2686), .B1(\bit_counter[1] ), 
    .A1(led_array_c_125), .D0(led_array_c_126), .C0(led_array_c_127), 
    .B0(\bit_counter[0] ), .A0(\bit_counter[1] ), .F0(n2686), .F1(n2689));
  SLICE_187 SLICE_187( .D1(\bit_counter[3] ), .C1(\byte_counter[2] ), 
    .B1(\byte_counter[0] ), .A1(\byte_counter[1] ), .D0(\byte_counter[1] ), 
    .C0(n2), .B0(\s[0] ), .A0(\byte_counter[2] ), .F0(n6), 
    .F1(\CIPO_N_286[5] ));
  SLICE_188 SLICE_188( .D1(\bit_counter[3] ), .C1(n983), 
    .B1(\byte_counter[0] ), .A1(\s[0] ), .D0(\bit_counter[0] ), 
    .B0(\bit_counter[2] ), .A0(\bit_counter[1] ), .F0(n983), .F1(n2));
  SLICE_189 SLICE_189( .D1(\image_shiftreg[76] ), .C1(n2692), 
    .B1(\bit_counter[1] ), .A1(\image_shiftreg[77] ), .D0(\bit_counter[1] ), 
    .C0(\image_shiftreg[79] ), .B0(\image_shiftreg[78] ), 
    .A0(\bit_counter[0] ), .F0(n2692), .F1(n2695));
  SLICE_191 SLICE_191( .D1(\bit_counter[1] ), .C1(n2698), 
    .B1(\image_shiftreg[68] ), .A1(\image_shiftreg[69] ), 
    .D0(\bit_counter[0] ), .C0(\bit_counter[1] ), .B0(\image_shiftreg[71] ), 
    .A0(\image_shiftreg[70] ), .F0(n2698), .F1(n2701));
  SLICE_193 SLICE_193( .D1(n2578), .C1(n2455), .B1(n2563), 
    .A1(\CIPO_N_286[5] ), .D0(n2704), .C0(n2653), .B0(\CIPO_N_286[3] ), 
    .A0(n2533), .F0(n2455), .F1(n2581));
  SLICE_194 SLICE_194( .D0(n2449), .C0(n2452), .B0(\CIPO_N_286[3] ), 
    .A0(\bit_counter[2] ), .F0(n2704));
  SLICE_195 SLICE_195( .D1(\bit_counter[1] ), .C1(n2710), 
    .B1(\image_shiftreg[60] ), .A1(\image_shiftreg[61] ), 
    .D0(\bit_counter[0] ), .C0(\bit_counter[1] ), .B0(\image_shiftreg[62] ), 
    .A0(\image_shiftreg[63] ), .F0(n2710), .F1(n2422));
  SLICE_197 SLICE_197( .D1(\bit_counter[1] ), .C1(n2536), 
    .B1(\image_shiftreg[41] ), .A1(\image_shiftreg[40] ), 
    .D0(\bit_counter[0] ), .C0(\image_shiftreg[42] ), .B0(\bit_counter[1] ), 
    .A0(\image_shiftreg[43] ), .F0(n2536), .F1(n2539));
  SLICE_199 SLICE_199( .D1(\bit_counter[1] ), .C1(n2716), 
    .B1(\image_shiftreg[57] ), .A1(\image_shiftreg[56] ), 
    .D0(\bit_counter[0] ), .C0(\bit_counter[1] ), .B0(\image_shiftreg[58] ), 
    .A0(\image_shiftreg[59] ), .F0(n2716), .F1(n2419));
  SLICE_201 SLICE_201( .D1(\image_shiftreg[13] ), .C1(n2722), 
    .B1(\image_shiftreg[12] ), .A1(\bit_counter[1] ), .D0(\bit_counter[0] ), 
    .C0(\image_shiftreg[14] ), .B0(\bit_counter[1] ), 
    .A0(\image_shiftreg[15] ), .F0(n2722), .F1(n2452));
  SLICE_203 SLICE_203( .D1(\bit_counter[1] ), .C1(n2632), 
    .B1(\image_shiftreg[25] ), .A1(\image_shiftreg[24] ), 
    .D0(\bit_counter[0] ), .C0(\bit_counter[1] ), .B0(\image_shiftreg[26] ), 
    .A0(\image_shiftreg[27] ), .F0(n2632), .F1(n2476));
  SLICE_205 SLICE_205( .D1(n2499), .C1(n2498), .B1(n2608), 
    .A1(\bit_counter[2] ), .C0(\image_shiftreg[96] ), 
    .B0(\image_shiftreg[97] ), .A0(\bit_counter[0] ), .F0(n2498), .F1(n2611));
  SLICE_206 SLICE_206( .D1(\bit_counter[2] ), .C1(n2432), .B1(n2433), 
    .A1(\bit_counter[1] ), .D0(\image_shiftreg[101] ), .C0(\bit_counter[0] ), 
    .B0(\image_shiftreg[100] ), .F0(n2432), .F1(n2608));
  SLICE_207 SLICE_207( .D1(\image_shiftreg[9] ), .C1(n2728), 
    .B1(\image_shiftreg[8] ), .A1(\bit_counter[1] ), .D0(\bit_counter[1] ), 
    .C0(\image_shiftreg[10] ), .B0(\bit_counter[0] ), 
    .A0(\image_shiftreg[11] ), .F0(n2728), .F1(n2449));
  SLICE_209 SLICE_209( .D0(n2542), .C0(n2428), .B0(n2527), 
    .A0(\CIPO_N_286[3] ), .F0(n2545));
  SLICE_210 SLICE_210( .D1(n2401), .C1(\CIPO_N_286[3] ), .B1(\bit_counter[2] ), 
    .A1(n2539), .D0(\byte_counter[0] ), .C0(\bit_counter[3] ), 
    .F0(\CIPO_N_286[3] ), .F1(n2542));
  SLICE_211 SLICE_211( .D1(\bit_counter[1] ), .C1(n2734), 
    .B1(\image_shiftreg[105] ), .A1(\image_shiftreg[104] ), 
    .D0(\bit_counter[1] ), .C0(\image_shiftreg[107] ), 
    .B0(\image_shiftreg[106] ), .A0(\bit_counter[0] ), .F0(n2734), .F1(n2737));
  SLICE_215 SLICE_215( .D1(\image_shiftreg[1] ), .C1(n2650), 
    .B1(\bit_counter[1] ), .A1(\image_shiftreg[0] ), .D0(\image_shiftreg[2] ), 
    .C0(\bit_counter[1] ), .B0(\bit_counter[0] ), .A0(\image_shiftreg[3] ), 
    .F0(n2650), .F1(n2653));
  SLICE_217 SLICE_217( .DI1(n2324), .D1(n6), .C1(\byte_counter[4] ), 
    .B1(\byte_counter[3] ), .A1(\s[0] ), .D0(reset_c), .C0(n2120), 
    .B0(\byte_counter[4] ), .A0(\s[1] ), .CE(n2022), .LSR(reset_c), .CLK(clk), 
    .Q1(\byte_counter[4] ), .F0(n2338), .F1(n2324));
  SLICE_218 SLICE_218( .D1(\s[0] ), .C1(n2120), .D0(\byte_counter[3] ), 
    .C0(\byte_counter[0] ), .B0(\byte_counter[2] ), .A0(\byte_counter[1] ), 
    .F0(n2120), .F1(n4));
  SLICE_220 SLICE_220( .D1(\s[1] ), .B1(n8), .A1(reset_c), .D0(reset_c), 
    .C0(n4), .B0(\byte_counter[4] ), .A0(\s[1] ), .F0(n885), .F1(n2026));
  SLICE_221 SLICE_221( .D1(\s[1] ), .C1(n8), .B1(\s[0] ), 
    .D0(controller_clk_last), .B0(CS_c), .A0(controller_clk_last_last), 
    .F0(n8), .F1(n2025));
  SLICE_224 SLICE_224( .D1(\byte_counter[2] ), .C1(n4_adj_1), 
    .A1(\byte_counter[3] ), .C0(\bit_counter[3] ), .B0(\byte_counter[0] ), 
    .A0(\byte_counter[1] ), .F0(n4_adj_1), .F1(n2005));
  SLICE_225 SLICE_225( .DI1(n2033), .D1(n983), .C1(CS_c), 
    .B1(\bit_counter[3] ), .D0(\byte_counter[1] ), .C0(\bit_counter[3] ), 
    .A0(\byte_counter[0] ), .CE(n2079), .LSR(reset_c), .CLK(clk), 
    .Q1(\bit_counter[3] ), .F0(\CIPO_N_286[4] ), .F1(n2033));
  SLICE_227 SLICE_227( .DI1(\controller_clk_last.sig_001.FeedThruLUT ), 
    .A1(controller_clk_last), .D0(CS_c), .B0(controller_clk_last), 
    .A0(controller_clk_last_last), .CE(clk_enable_2), .CLK(clk), 
    .Q1(controller_clk_last_last), .F0(n2079), 
    .F1(\controller_clk_last.sig_001.FeedThruLUT ));
  SLICE_228 SLICE_228( .D1(controller_clk_last_last), .C1(CS_c), 
    .B1(controller_clk_last), .A1(reset_c), .D0(\s[1] ), 
    .C0(controller_clk_last), .B0(CS_c), .A0(controller_clk_last_last), 
    .F0(n2022), .F1(n2074));
  SLICE_230 SLICE_230( .C0(n2689), .B0(\bit_counter[2] ), .A0(n2641), 
    .F0(n2415));
  SLICE_232 SLICE_232( .DI1(n1), .D1(n2467), .C1(n2581), .B1(n2005), 
    .A1(\s[0] ), .D0(\s[0] ), .B0(\s[1] ), .CE(n2074), .LSR(n2026), .CLK(clk), 
    .Q1(CIPO_c), .F0(led_c), .F1(n1));
  SLICE_235 SLICE_235( .F0(VCC_net));
  SLICE_236 SLICE_236( .D0(\bit_counter[2] ), .C0(n2695), .A0(n2599), 
    .F0(n2508));
  SLICE_239 SLICE_239( .D0(\bit_counter[0] ), .C0(\image_shiftreg[86] ), 
    .B0(\image_shiftreg[87] ), .F0(n2502));
  SLICE_240 SLICE_240( .C0(n2659), .B0(\bit_counter[2] ), .A0(n2737), 
    .F0(n2457));
  SLICE_242 SLICE_242( .D1(\image_shiftreg[103] ), .C1(\bit_counter[0] ), 
    .B1(\image_shiftreg[102] ), .D0(\bit_counter[0] ), 
    .B0(\image_shiftreg[82] ), .A0(\image_shiftreg[83] ), .F0(n2505), 
    .F1(n2433));
  SLICE_244 SLICE_244( .B0(reset_c), .F0(clk_enable_2));
  SLICE_247 SLICE_247( .DI1(n2373), .D1(CS_c), .C1(controller_clk_last), 
    .B1(controller_clk_last_last), .A1(\bit_counter[0] ), 
    .D0(\image_shiftreg[99] ), .B0(\bit_counter[0] ), 
    .A0(\image_shiftreg[98] ), .LSR(reset_c), .CLK(clk), .Q1(\bit_counter[0] ), 
    .F0(n2499), .F1(n2373));
  H H( .CLKHFPU(VCC_net), .CLKHFEN(VCC_net), .CLKHF(clk));
  data_ready_i1 data_ready_i1( .DO0(\s[0] ), .CE(clk_enable_2), .OUTCLK(clk), 
    .PADDO(data_ready_c));
  controller_clk_last_c controller_clk_last_c( .PADDI(controller_clk_c), 
    .CE(clk_enable_2), .INCLK(clk), .DI0(controller_clk_last));
  led_array_7_ \led_array[7]_I ( .PADDO(led_array_c_127), 
    .ledarray7(led_array[7]));
  led_array_6_ \led_array[6]_I ( .PADDO(led_array_c_126), 
    .ledarray6(led_array[6]));
  led_array_5_ \led_array[5]_I ( .PADDO(led_array_c_125), 
    .ledarray5(led_array[5]));
  led_array_4_ \led_array[4]_I ( .PADDO(led_array_c_124), 
    .ledarray4(led_array[4]));
  led_array_3_ \led_array[3]_I ( .PADDO(led_array_c_123), 
    .ledarray3(led_array[3]));
  led_array_2_ \led_array[2]_I ( .PADDO(led_array_c_122), 
    .ledarray2(led_array[2]));
  led_array_1_ \led_array[1]_I ( .PADDO(led_array_c_121), 
    .ledarray1(led_array[1]));
  led_array_0_ \led_array[0]_I ( .PADDO(led_array_c_120), 
    .ledarray0(led_array[0]));
  CIPO CIPO_I( .PADDO(CIPO_c), .CIPO(CIPO));
  led led_I( .PADDO(led_c), .led(led));
  data_ready data_ready_I( .PADDO(data_ready_c), .data_ready(data_ready));
  reset reset_I( .PADDI(reset_c), .reset(reset));
  controller_clk controller_clk_I( .PADDI(controller_clk_c), 
    .controller_clk(controller_clk));
  COPI COPI_I( .PADDI(COPI_c), .COPI(COPI));
  CS CS_I( .PADDI(CS_c), .CS(CS));
endmodule

module SLICE_1 ( input DI1, DI0, C1, A0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut4 SLICE_1_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_1_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i1( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i0( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module lut40001 ( input A, B, C, D, output Z );

  LUT4 #("0xAAAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module ffsre2 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "ASYNC";
endmodule

module SLICE_3 ( input DI1, DI0, D1, C1, A1, C0, B0, A0, CE, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40002 i1_2_lut_3_lut_adj_4( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40003 i2_3_lut_adj_7( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 byte_counter_i0_i0( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 byte_counter_i0_i1( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40002 ( input A, B, C, D, output Z );

  LUT4 #("0xA5F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40003 ( input A, B, C, D, output Z );

  LUT4 #("0x9696") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_4 ( input DI1, DI0, D1, C1, B1, A1, C0, B0, A0, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40004 i1609_2_lut_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40005 i1217_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20006 s_i1( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20006 s_i0( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40004 ( input A, B, C, D, output Z );

  LUT4 #("0xAA04") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40005 ( input A, B, C, D, output Z );

  LUT4 #("0x5454") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module ffsre20006 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module SLICE_5 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, A0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40007 i2_3_lut_adj_5( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40008 i2_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 byte_counter_i0_i3( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 byte_counter_i0_i2( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40007 ( input A, B, C, D, output Z );

  LUT4 #("0xC33C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40008 ( input A, B, C, D, output Z );

  LUT4 #("0xA69A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_10 ( input DI1, DI0, D1, A0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40009 SLICE_10_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_10_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i3( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i2( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40009 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_12 ( input DI1, DI0, A1, A0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40010 SLICE_12_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_12_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i5( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i4( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40010 ( input A, B, C, D, output Z );

  LUT4 #("0xAAAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_14 ( input DI1, DI0, D1, C0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40009 SLICE_14_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 SLICE_14_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i7( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i6( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40011 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_16 ( input DI1, DI0, B1, C0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40012 SLICE_16_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 SLICE_16_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i9( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i8( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40012 ( input A, B, C, D, output Z );

  LUT4 #("0xCCCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_18 ( input DI1, DI0, A1, A0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40010 SLICE_18_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_18_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i11( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i10( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_20 ( input DI1, DI0, D1, C0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40009 SLICE_20_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 SLICE_20_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i13( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i12( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_22 ( input DI1, DI0, C1, C0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut4 SLICE_22_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 SLICE_22_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i15( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i14( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_24 ( input DI1, DI0, D1, C0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40009 SLICE_24_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 SLICE_24_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i17( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i16( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_26 ( input DI1, DI0, C1, C0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut4 SLICE_26_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 SLICE_26_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i19( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i18( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_28 ( input DI1, DI0, D1, A0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40009 SLICE_28_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_28_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i21( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i20( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_30 ( input DI1, DI0, A1, C0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40010 SLICE_30_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 SLICE_30_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i23( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i22( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_32 ( input DI1, DI0, A1, C0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40010 SLICE_32_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 SLICE_32_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i25( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i24( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_34 ( input DI1, DI0, D1, A0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40009 SLICE_34_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_34_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i27( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i26( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_36 ( input DI1, DI0, C1, B0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut4 SLICE_36_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 SLICE_36_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i29( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i28( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40013 ( input A, B, C, D, output Z );

  LUT4 #("0xCCCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_38 ( input DI1, DI0, D1, C0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40009 SLICE_38_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 SLICE_38_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i31( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i30( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_40 ( input DI1, DI0, D1, C0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40009 SLICE_40_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 SLICE_40_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i33( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i32( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_42 ( input DI1, DI0, C1, C0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut4 SLICE_42_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 SLICE_42_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i35( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i34( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_44 ( input DI1, DI0, A1, A0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40010 SLICE_44_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_44_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i37( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i36( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_46 ( input DI1, DI0, C1, A0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut4 SLICE_46_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_46_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i39( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i38( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_48 ( input DI1, DI0, B1, C0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40012 SLICE_48_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 SLICE_48_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i41( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i40( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_50 ( input DI1, DI0, B1, A0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40012 SLICE_50_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_50_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i43( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i42( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_52 ( input DI1, DI0, D1, B0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40009 SLICE_52_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 SLICE_52_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i45( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i44( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_54 ( input DI1, DI0, D1, C0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40009 SLICE_54_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 SLICE_54_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i47( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i46( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_56 ( input DI1, DI0, A1, B0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40010 SLICE_56_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 SLICE_56_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i49( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i48( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_58 ( input DI1, DI0, D1, C0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40009 SLICE_58_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 SLICE_58_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i51( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i50( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_60 ( input DI1, DI0, A1, C0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40010 SLICE_60_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 SLICE_60_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i53( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i52( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_62 ( input DI1, DI0, C1, A0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut4 SLICE_62_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_62_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i55( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i54( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_64 ( input DI1, DI0, A1, C0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40010 SLICE_64_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 SLICE_64_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i57( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i56( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_66 ( input DI1, DI0, D1, A0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40009 SLICE_66_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_66_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i59( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i58( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_68 ( input DI1, DI0, D1, C0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40009 SLICE_68_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 SLICE_68_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i61( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i60( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_70 ( input DI1, DI0, B1, C0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40012 SLICE_70_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 SLICE_70_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i63( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i62( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_72 ( input DI1, DI0, B1, D0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40012 SLICE_72_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40014 SLICE_72_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 image_shiftreg_i0_i65( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i64( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40014 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_74 ( input DI1, DI0, C1, C0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut4 SLICE_74_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 SLICE_74_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i67( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i66( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_76 ( input DI1, DI0, A1, C0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40010 SLICE_76_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 SLICE_76_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i69( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i68( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_78 ( input DI1, DI0, D1, A0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40009 SLICE_78_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_78_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i71( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i70( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_80 ( input DI1, DI0, A1, A0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40010 SLICE_80_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_80_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i73( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i72( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_82 ( input DI1, DI0, D1, C0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40009 SLICE_82_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 SLICE_82_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i75( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i74( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_84 ( input DI1, DI0, C1, B0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut4 SLICE_84_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 SLICE_84_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i77( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i76( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_86 ( input DI1, DI0, D1, C0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40009 SLICE_86_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 SLICE_86_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i79( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i78( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_88 ( input DI1, DI0, A1, D0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40010 SLICE_88_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40014 SLICE_88_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 image_shiftreg_i0_i81( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i80( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_90 ( input DI1, DI0, B1, B0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40012 SLICE_90_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 SLICE_90_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i83( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i82( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_92 ( input DI1, DI0, A1, B0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40010 SLICE_92_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 SLICE_92_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i85( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i84( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_94 ( input DI1, DI0, B1, D0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40012 SLICE_94_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40014 SLICE_94_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 image_shiftreg_i0_i87( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i86( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_96 ( input DI1, DI0, D1, A0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40009 SLICE_96_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_96_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i89( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i88( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_98 ( input DI1, DI0, D1, B0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40009 SLICE_98_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 SLICE_98_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i91( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i90( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_100 ( input DI1, DI0, D1, C0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40009 SLICE_100_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 SLICE_100_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i93( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i92( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_102 ( input DI1, DI0, B1, C0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40012 SLICE_102_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 SLICE_102_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i95( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i94( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_104 ( input DI1, DI0, D1, C0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40009 SLICE_104_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 SLICE_104_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i97( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i96( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_106 ( input DI1, DI0, B1, C0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40012 SLICE_106_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 SLICE_106_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i99( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i98( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_108 ( input DI1, DI0, C1, A0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut4 SLICE_108_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_108_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i101( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i100( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_110 ( input DI1, DI0, D1, A0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40009 SLICE_110_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_110_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i103( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i102( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_112 ( input DI1, DI0, C1, C0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut4 SLICE_112_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 SLICE_112_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i105( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i104( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_114 ( input DI1, DI0, D1, A0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40009 SLICE_114_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_114_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i107( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i106( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_116 ( input DI1, DI0, C1, C0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut4 SLICE_116_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 SLICE_116_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i109( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i108( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_118 ( input DI1, DI0, C1, C0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut4 SLICE_118_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 SLICE_118_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i111( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i110( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_120 ( input DI1, DI0, A1, A0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40010 SLICE_120_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_120_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i113( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i112( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_122 ( input DI1, DI0, D1, C0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40009 SLICE_122_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 SLICE_122_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i115( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i114( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_124 ( input DI1, DI0, B1, C0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40012 SLICE_124_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 SLICE_124_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i117( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i116( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_126 ( input DI1, DI0, A1, A0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40010 SLICE_126_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_126_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i119( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i118( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_128 ( input DI1, DI0, C1, A0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut4 SLICE_128_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_128_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i121( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i120( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_130 ( input DI1, DI0, B1, A0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40012 SLICE_130_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_130_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i123( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i122( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_132 ( input DI1, DI0, A1, C0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40010 SLICE_132_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 SLICE_132_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i125( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i124( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_134 ( input DI1, DI0, A1, C0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40010 SLICE_134_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 SLICE_134_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 image_shiftreg_i0_i127( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 image_shiftreg_i0_i126( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_137 ( input DI1, DI0, D1, C1, A1, D0, C0, B0, A0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40015 i1289_3_lut( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40016 i1292_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 bit_counter__i1( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 bit_counter__i2( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40015 ( input A, B, C, D, output Z );

  LUT4 #("0x050A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40016 ( input A, B, C, D, output Z );

  LUT4 #("0x006A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_141 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40017 n2584_bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40018 \bit_counter[0]_bdd_4_lut_9 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40017 ( input A, B, C, D, output Z );

  LUT4 #("0xF0CA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40018 ( input A, B, C, D, output Z );

  LUT4 #("0xCFA0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_143 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40017 n2524_bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40019 \bit_counter[0]_bdd_4_lut_3 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40019 ( input A, B, C, D, output Z );

  LUT4 #("0xACF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_145 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40020 n2590_bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40021 \bit_counter[0]_bdd_4_lut_10 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40020 ( input A, B, C, D, output Z );

  LUT4 #("0xF0AC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40021 ( input A, B, C, D, output Z );

  LUT4 #("0xAFC0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_147 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40022 i1563_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40023 n2668_bdd_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40022 ( input A, B, C, D, output Z );

  LUT4 #("0xF690") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40023 ( input A, B, C, D, output Z );

  LUT4 #("0xF2C2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_148 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40024 \CIPO_N_286[3]_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40025 i1510_3_lut( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40024 ( input A, B, C, D, output Z );

  LUT4 #("0xDDA0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40025 ( input A, B, C, D, output Z );

  LUT4 #("0xCCF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_149 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40017 n2662_bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40026 \bit_counter[0]_bdd_4_lut_19 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40026 ( input A, B, C, D, output Z );

  LUT4 #("0xE4AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_151 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40027 n2530_bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40028 \bit_counter[0]_bdd_4_lut_4 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40027 ( input A, B, C, D, output Z );

  LUT4 #("0xF4A4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40028 ( input A, B, C, D, output Z );

  LUT4 #("0xB8CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_153 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40020 n2596_bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40019 \bit_counter[0]_bdd_4_lut_11 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_155 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40017 n2572_bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40029 \bit_counter[0]_bdd_4_lut_8 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40029 ( input A, B, C, D, output Z );

  LUT4 #("0xF588") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_157 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40017 n2638_bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40018 \bit_counter[0]_bdd_4_lut_15 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_159 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40030 \bit_counter[1]_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40031 i1597_3_lut( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40030 ( input A, B, C, D, output Z );

  LUT4 #("0xEA62") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40031 ( input A, B, C, D, output Z );

  LUT4 #("0xCFC0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_160 ( input D1, C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40032 n2614_bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40033 i1600_3_lut( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40032 ( input A, B, C, D, output Z );

  LUT4 #("0xEE50") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40033 ( input A, B, C, D, output Z );

  LUT4 #("0xFA0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_161 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40020 n2644_bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40021 \bit_counter[0]_bdd_4_lut_16 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_163 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40034 n2548_bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40021 \bit_counter[0]_bdd_4_lut_6 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40034 ( input A, B, C, D, output Z );

  LUT4 #("0xE3E0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_165 ( input D0, C0, B0, A0, output F0 );

  lut40035 n2560_bdd_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40035 ( input A, B, C, D, output Z );

  LUT4 #("0xEE50") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_166 ( input D0, C0, B0, A0, output F0 );

  lut40029 \bit_counter[2]_bdd_4_lut_4 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_167 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40020 n2566_bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40018 \bit_counter[0]_bdd_4_lut_7 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_169 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40020 n2674_bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40028 \bit_counter[0]_bdd_4_lut_20 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_171 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40036 \CIPO_N_286[4]_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40035 n2554_bdd_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40036 ( input A, B, C, D, output Z );

  LUT4 #("0xE6C4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_172 ( input D0, C0, B0, A0, output F0 );

  lut40037 \bit_counter[2]_bdd_4_lut_3 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40037 ( input A, B, C, D, output Z );

  LUT4 #("0xE6A2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_173 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40038 n2656_bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40029 \bit_counter[0]_bdd_4_lut_18 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40038 ( input A, B, C, D, output Z );

  LUT4 #("0xE5E0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_175 ( input D1, C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40039 n2626_bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40040 i1603_3_lut( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40039 ( input A, B, C, D, output Z );

  LUT4 #("0xEE30") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40040 ( input A, B, C, D, output Z );

  LUT4 #("0xF0AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_176 ( input D1, C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40041 \CIPO_N_286[3]_bdd_4_lut_2 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40042 i1556_3_lut( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40041 ( input A, B, C, D, output Z );

  LUT4 #("0xE6A2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40042 ( input A, B, C, D, output Z );

  LUT4 #("0xF5A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_177 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40034 n2620_bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40026 \bit_counter[0]_bdd_4_lut_13 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_179 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40020 n2680_bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40021 \bit_counter[0]_bdd_4_lut_21 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_181 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40038 n2602_bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40043 \bit_counter[0]_bdd_4_lut_12 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40043 ( input A, B, C, D, output Z );

  LUT4 #("0xF388") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_183 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40020 n2518_bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40021 \bit_counter[0]_bdd_4_lut_2 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_185 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40034 n2686_bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40044 \bit_counter[0]_bdd_4_lut_22 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40044 ( input A, B, C, D, output Z );

  LUT4 #("0xE6C4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_187 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40045 i1185_2_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40046 i237_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40045 ( input A, B, C, D, output Z );

  LUT4 #("0x5A1E") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40046 ( input A, B, C, D, output Z );

  LUT4 #("0xECC8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_188 ( input D1, C1, B1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40047 i223_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40048 i170_2_lut_3_lut( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40047 ( input A, B, C, D, output Z );

  LUT4 #("0xAACA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40048 ( input A, B, C, D, output Z );

  LUT4 #("0x8800") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_189 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40034 n2692_bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40026 \bit_counter[0]_bdd_4_lut_23 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_191 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40020 n2698_bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40018 \bit_counter[0]_bdd_4_lut_24 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_193 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40032 n2578_bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40049 n2704_bdd_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40049 ( input A, B, C, D, output Z );

  LUT4 #("0xEE30") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_194 ( input D0, C0, B0, A0, output F0 );

  lut40037 \bit_counter[2]_bdd_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_195 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40020 n2710_bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40021 \bit_counter[0]_bdd_4_lut_25 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_197 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40017 n2536_bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40050 \bit_counter[0]_bdd_4_lut_5 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40050 ( input A, B, C, D, output Z );

  LUT4 #("0xBBC0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_199 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40017 n2716_bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40021 \bit_counter[0]_bdd_4_lut_26 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_201 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40027 n2722_bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40050 \bit_counter[0]_bdd_4_lut_27 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_203 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40017 n2632_bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40021 \bit_counter[0]_bdd_4_lut_14 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_205 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40051 n2608_bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 i1594_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40051 ( input A, B, C, D, output Z );

  LUT4 #("0xDC98") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40052 ( input A, B, C, D, output Z );

  LUT4 #("0xD8D8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_206 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40053 \bit_counter[1]_bdd_4_lut_2 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40054 i1528_3_lut( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40053 ( input A, B, C, D, output Z );

  LUT4 #("0xD8AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40054 ( input A, B, C, D, output Z );

  LUT4 #("0xFC0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_207 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40027 n2728_bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40028 \bit_counter[0]_bdd_4_lut_28 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_209 ( input D0, C0, B0, A0, output F0 );

  lut40035 n2542_bdd_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_210 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40055 \bit_counter[2]_bdd_4_lut_2 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40056 i1_2_lut_adj_3( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40055 ( input A, B, C, D, output Z );

  LUT4 #("0xEC2C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40056 ( input A, B, C, D, output Z );

  LUT4 #("0x0FF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_211 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40017 n2734_bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40026 \bit_counter[0]_bdd_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_215 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40057 n2650_bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40058 \bit_counter[0]_bdd_4_lut_17 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40057 ( input A, B, C, D, output Z );

  LUT4 #("0xF2C2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40058 ( input A, B, C, D, output Z );

  LUT4 #("0xBC8C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_217 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, CE, LSR, CLK, 
    output Q1, F0, F1 );
  wire   DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40059 i2_4_lut_adj_6( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40060 i3_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 byte_counter_i0_i4( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40059 ( input A, B, C, D, output Z );

  LUT4 #("0xB4D2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40060 ( input A, B, C, D, output Z );

  LUT4 #("0x0004") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_218 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40061 i1_2_lut( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40062 i3_4_lut_adj_1( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40061 ( input A, B, C, D, output Z );

  LUT4 #("0x0F00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40062 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_220 ( input D1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40063 i1_2_lut_3_lut_3_lut( .A(A1), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40064 i117_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40063 ( input A, B, C, D, output Z );

  LUT4 #("0x4400") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40064 ( input A, B, C, D, output Z );

  LUT4 #("0x00BA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_221 ( input D1, C1, B1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40065 i1_2_lut_3_lut_adj_9( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40066 i1_2_lut_3_lut( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40065 ( input A, B, C, D, output Z );

  LUT4 #("0x0030") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40066 ( input A, B, C, D, output Z );

  LUT4 #("0x1100") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_224 ( input D1, C1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40067 i1_3_lut( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40068 i1042_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40067 ( input A, B, C, D, output Z );

  LUT4 #("0xAA5A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40068 ( input A, B, C, D, output Z );

  LUT4 #("0x5151") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_225 ( input DI1, D1, C1, B1, D0, C0, A0, CE, LSR, CLK, output Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40069 i1293_3_lut( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40070 i2_3_lut( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre2 bit_counter__i3( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40069 ( input A, B, C, D, output Z );

  LUT4 #("0x030C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40070 ( input A, B, C, D, output Z );

  LUT4 #("0xF50A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_227 ( input DI1, A1, D0, B0, A0, CE, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly;

  lut40010 SLICE_227_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40071 i1_2_lut_3_lut_adj_8( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre20006 controller_clk_last_last_c( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40071 ( input A, B, C, D, output Z );

  LUT4 #("0xFF44") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_228 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40072 i1_2_lut_2_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40073 i1_2_lut_adj_2( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40072 ( input A, B, C, D, output Z );

  LUT4 #("0x0004") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40073 ( input A, B, C, D, output Z );

  LUT4 #("0x0010") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_230 ( input C0, B0, A0, output F0 );
  wire   GNDI;

  lut40074 i1511_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40074 ( input A, B, C, D, output Z );

  LUT4 #("0xE2E2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_232 ( input DI1, D1, C1, B1, A1, D0, B0, CE, LSR, CLK, output Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40075 i1284_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40076 i1612_2_lut( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20006 CIPO_i0( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40075 ( input A, B, C, D, output Z );

  LUT4 #("0xF7D5") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40076 ( input A, B, C, D, output Z );

  LUT4 #("0x3300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_235 ( output F0 );
  wire   GNDI;

  lut40077 i2( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40077 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_236 ( input D0, C0, A0, output F0 );
  wire   GNDI;

  lut40040 i1604_3_lut( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_239 ( input D0, C0, B0, output F0 );
  wire   GNDI;

  lut40025 i1598_3_lut( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_240 ( input C0, B0, A0, output F0 );
  wire   GNDI;

  lut40074 i1553_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_242 ( input D1, C1, B1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40078 i1529_3_lut( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40079 i1601_3_lut( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40078 ( input A, B, C, D, output Z );

  LUT4 #("0xFC0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40079 ( input A, B, C, D, output Z );

  LUT4 #("0xAACC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_244 ( input B0, output F0 );
  wire   GNDI;

  lut40080 i105_1_lut( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40080 ( input A, B, C, D, output Z );

  LUT4 #("0x3333") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_247 ( input DI1, D1, C1, B1, A1, D0, B0, A0, LSR, CLK, output Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40081 i1_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40082 i1595_3_lut( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 bit_counter__i0( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40081 ( input A, B, C, D, output Z );

  LUT4 #("0x009A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40082 ( input A, B, C, D, output Z );

  LUT4 #("0xEE22") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module H ( input CLKHFPU, CLKHFEN, output CLKHF );
  wire   GNDI;

  HSOSC_CORE_B H_HSOSC_CORE( .CLKHFPU(CLKHFPU), .CLKHFEN(CLKHFEN), 
    .TRIM9(GNDI), .TRIM8(GNDI), .TRIM7(GNDI), .TRIM6(GNDI), .TRIM5(GNDI), 
    .TRIM4(GNDI), .TRIM3(GNDI), .TRIM2(GNDI), .TRIM1(GNDI), .TRIM0(GNDI), 
    .CLKHF(CLKHF));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module HSOSC_CORE_B ( input CLKHFPU, CLKHFEN, TRIM9, TRIM8, TRIM7, TRIM6, 
    TRIM5, TRIM4, TRIM3, TRIM2, TRIM1, TRIM0, output CLKHF );

  HSOSC_CORE INST10( .CLKHFPU(CLKHFPU), .CLKHFEN(CLKHFEN), .TRIM9(TRIM9), 
    .TRIM8(TRIM8), .TRIM7(TRIM7), .TRIM6(TRIM6), .TRIM5(TRIM5), .TRIM4(TRIM4), 
    .TRIM3(TRIM3), .TRIM2(TRIM2), .TRIM1(TRIM1), .TRIM0(TRIM0), .CLKHF(CLKHF));
  defparam INST10.CLKHF_DIV = "0b00";
  defparam INST10.FABRIC_TRIME = "DISABLE";
endmodule

module data_ready_i1 ( input DO0, CE, OUTCLK, output PADDO );
  wire   GNDI, DO0_dly, OUTCLK_dly, CE_dly;

  IOL_B_B data_ready_i1_IOL_B( .PADDI(GNDI), .DO1(GNDI), .DO0(DO0_dly), 
    .CE(CE_dly), .IOLTO(GNDI), .HOLD(GNDI), .INCLK(GNDI), .OUTCLK(OUTCLK_dly), 
    .PADDO(PADDO), .PADDT(), .DI1(), .DI0());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (OUTCLK => PADDO) = (0:0:0,0:0:0);
    $setuphold (posedge OUTCLK, DO0, 0:0:0, 0:0:0,,,, OUTCLK_dly, DO0_dly);
    $setuphold (posedge OUTCLK, CE, 0:0:0, 0:0:0,,,, OUTCLK_dly, CE_dly);
  endspecify

endmodule

module IOL_B_B ( input PADDI, DO1, DO0, CE, IOLTO, HOLD, INCLK, OUTCLK, 
    output PADDO, PADDT, DI1, DI0 );

  IOL_B INST10( .PADDI(PADDI), .DO1(DO1), .DO0(DO0), .CE(CE), .IOLTO(IOLTO), 
    .HOLD(HOLD), .INCLK(INCLK), .OUTCLK(OUTCLK), .PADDO(PADDO), .PADDT(PADDT), 
    .DI1(DI1), .DI0(DI0));
  defparam INST10.LATCHIN = "LATCH_REG";
  defparam INST10.DDROUT = "NO";
endmodule

module controller_clk_last_c ( input PADDI, CE, INCLK, output DI0 );
  wire   GNDI, PADDI_dly, INCLK_dly, CE_dly;

  IOL_B0083 controller_clk_last_c_IOL_B( .PADDI(PADDI_dly), .DO1(GNDI), 
    .DO0(GNDI), .CE(CE_dly), .IOLTO(GNDI), .HOLD(GNDI), .INCLK(INCLK_dly), 
    .OUTCLK(GNDI), .PADDO(), .PADDT(), .DI1(), .DI0(DI0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (INCLK => DI0) = (0:0:0,0:0:0);
    $setuphold (posedge INCLK, PADDI, 0:0:0, 0:0:0,,,, INCLK_dly, PADDI_dly);
    $setuphold (posedge INCLK, CE, 0:0:0, 0:0:0,,,, INCLK_dly, CE_dly);
  endspecify

endmodule

module IOL_B0083 ( input PADDI, DO1, DO0, CE, IOLTO, HOLD, INCLK, OUTCLK, 
    output PADDO, PADDT, DI1, DI0 );

  IOL_B INST10( .PADDI(PADDI), .DO1(DO1), .DO0(DO0), .CE(CE), .IOLTO(IOLTO), 
    .HOLD(HOLD), .INCLK(INCLK), .OUTCLK(OUTCLK), .PADDO(PADDO), .PADDT(PADDT), 
    .DI1(DI1), .DI0(DI0));
  defparam INST10.LATCHIN = "NONE_REG";
  defparam INST10.DDROUT = "NO";
endmodule

module led_array_7_ ( input PADDO, output ledarray7 );
  wire   VCCI;

  BB_B_B \led_array[7]_BB_B ( .T_N(VCCI), .I(PADDO), .O(), .B(ledarray7));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => ledarray7) = (0:0:0,0:0:0);
  endspecify

endmodule

module BB_B_B ( input T_N, I, output O, inout B );

  BB_B INST10( .T_N(T_N), .I(I), .O(O), .B(B));
endmodule

module led_array_6_ ( input PADDO, output ledarray6 );
  wire   VCCI;

  BB_B_B \led_array[6]_BB_B ( .T_N(VCCI), .I(PADDO), .O(), .B(ledarray6));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => ledarray6) = (0:0:0,0:0:0);
  endspecify

endmodule

module led_array_5_ ( input PADDO, output ledarray5 );
  wire   VCCI;

  BB_B_B \led_array[5]_BB_B ( .T_N(VCCI), .I(PADDO), .O(), .B(ledarray5));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => ledarray5) = (0:0:0,0:0:0);
  endspecify

endmodule

module led_array_4_ ( input PADDO, output ledarray4 );
  wire   VCCI;

  BB_B_B \led_array[4]_BB_B ( .T_N(VCCI), .I(PADDO), .O(), .B(ledarray4));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => ledarray4) = (0:0:0,0:0:0);
  endspecify

endmodule

module led_array_3_ ( input PADDO, output ledarray3 );
  wire   VCCI;

  BB_B_B \led_array[3]_BB_B ( .T_N(VCCI), .I(PADDO), .O(), .B(ledarray3));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => ledarray3) = (0:0:0,0:0:0);
  endspecify

endmodule

module led_array_2_ ( input PADDO, output ledarray2 );
  wire   VCCI;

  BB_B_B \led_array[2]_BB_B ( .T_N(VCCI), .I(PADDO), .O(), .B(ledarray2));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => ledarray2) = (0:0:0,0:0:0);
  endspecify

endmodule

module led_array_1_ ( input PADDO, output ledarray1 );
  wire   VCCI;

  BB_B_B \led_array[1]_BB_B ( .T_N(VCCI), .I(PADDO), .O(), .B(ledarray1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => ledarray1) = (0:0:0,0:0:0);
  endspecify

endmodule

module led_array_0_ ( input PADDO, output ledarray0 );
  wire   VCCI;

  BB_B_B \led_array[0]_BB_B ( .T_N(VCCI), .I(PADDO), .O(), .B(ledarray0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => ledarray0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIPO ( input PADDO, output CIPO );
  wire   VCCI;

  BB_B_B CIPO_BB_B( .T_N(VCCI), .I(PADDO), .O(), .B(CIPO));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => CIPO) = (0:0:0,0:0:0);
  endspecify

endmodule

module led ( input PADDO, output led );
  wire   VCCI;

  BB_B_B led_BB_B( .T_N(VCCI), .I(PADDO), .O(), .B(led));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => led) = (0:0:0,0:0:0);
  endspecify

endmodule

module data_ready ( input PADDO, output data_ready );
  wire   VCCI;

  BB_B_B data_ready_BB_B( .T_N(VCCI), .I(PADDO), .O(), .B(data_ready));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => data_ready) = (0:0:0,0:0:0);
  endspecify

endmodule

module reset ( output PADDI, input reset );
  wire   GNDI;

  BB_B_B reset_BB_B( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(reset));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (reset => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module controller_clk ( output PADDI, input controller_clk );
  wire   GNDI;

  BB_B_B controller_clk_BB_B( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(controller_clk));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (controller_clk => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module COPI ( output PADDI, input COPI );
  wire   GNDI;

  BB_B_B COPI_BB_B( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(COPI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (COPI => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module CS ( output PADDI, input CS );
  wire   GNDI;

  BB_B_B CS_BB_B( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(CS));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CS => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule
